{"remainingRequest":"C:\\Users\\vovav\\Desktop\\ProfEvents\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\vovav\\Desktop\\ProfEvents\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\vovav\\Desktop\\ProfEvents\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\vovav\\Desktop\\ProfEvents\\src\\components\\RecommendedEvents.vue?vue&type=template&id=2d7f8154&scoped=true&","dependencies":[{"path":"C:\\Users\\vovav\\Desktop\\ProfEvents\\src\\components\\RecommendedEvents.vue","mtime":1594106006491},{"path":"C:\\Users\\vovav\\Desktop\\ProfEvents\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\vovav\\Desktop\\ProfEvents\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\vovav\\Desktop\\ProfEvents\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\vovav\\Desktop\\ProfEvents\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}