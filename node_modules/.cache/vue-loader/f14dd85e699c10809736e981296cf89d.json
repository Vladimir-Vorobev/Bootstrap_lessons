{"remainingRequest":"C:\\Users\\vovav\\Desktop\\ProfEvents\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\vovav\\Desktop\\ProfEvents\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\vovav\\Desktop\\ProfEvents\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\vovav\\Desktop\\ProfEvents\\src\\components\\Profile.vue?vue&type=template&id=bf1681ae&scoped=true&","dependencies":[{"path":"C:\\Users\\vovav\\Desktop\\ProfEvents\\src\\components\\Profile.vue","mtime":1594292278488},{"path":"C:\\Users\\vovav\\Desktop\\ProfEvents\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\vovav\\Desktop\\ProfEvents\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\vovav\\Desktop\\ProfEvents\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\vovav\\Desktop\\ProfEvents\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibWFpbiIgfSwgWwogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250YWluZXIgd2FycCIgfSwgWwogICAgICBfYygiZm9ybSIsIHsgc3RhdGljQ2xhc3M6ICJmb3JtYm94IiB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiZGl2IiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJyb3ciLCBzdGF0aWNTdHlsZTogeyAibWFyZ2luLWJvdHRvbSI6ICIxZW0iIH0gfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX2MoImgyIiwgeyBzdGF0aWNDbGFzczogImNvbC0xMSIgfSwgWwogICAgICAgICAgICAgIF92bS5fdigi0KDQtdC00LDQutGC0LjRgNC+0LLQsNGC0Ywg0L/RgNC+0YTQuNC70YwiKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtMSIgfSwgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYnRuIGJ0bi1kYW5nZXIiLAogICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgIGtleXVwOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgICAgICAgICAgISRldmVudC50eXBlLmluZGV4T2YoImtleSIpICYmCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5faygkZXZlbnQua2V5Q29kZSwgImVudGVyIiwgMTMsICRldmVudC5rZXksICJFbnRlciIpCiAgICAgICAgICAgICAgICAgICAgICApIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGwKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0ubm90ZXhpdCgpCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmV4aXQoKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFtfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJmYXMgZmEtc2lnbi1vdXQtYWx0IiB9KV0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdCiAgICAgICAgKSwKICAgICAgICBfdm0ucm9sZQogICAgICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyIgfSwgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiY29sLTkgY29sLW1kLTMiIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLXNlY29uZGFyeSBidG4tbGciLAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdG86ICIvYWRtaW4iIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoItCQ0LTQvNC40L3QuNGB0YLRgNCw0YLQuNCy0L3QsNGPINC/0LDQvdC10LvRjCIpXQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSkKICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImJyIiksCiAgICAgICAgX3ZtLl9tKDApLAogICAgICAgIF92bS5fbSgxKSwKICAgICAgICBfdm0uX20oMiksCiAgICAgICAgX3ZtLl9tKDMpLAogICAgICAgIF92bS5fbSg0KSwKICAgICAgICBfdm0uX20oNSksCiAgICAgICAgX3ZtLl9tKDYpLAogICAgICAgIF92bS5fbSg3KSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZvcm0tZ3JvdXAgcm93IiB9LCBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biBidG4tcHJpbWFyeSBidG4tbGciLAogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0udXBkYXRlVXNlcigpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbX3ZtLl92KCLQodC+0YXRgNCw0L3QuNGC0YwiKV0KICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX3ZtLl9tKDgpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyBudW0iIH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJkaXYiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImNvbC0xMiBjb2wtbWQtOCIgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX2MoInNwYW4iLCBbCiAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgItCt0YLQvtGCINC90L7QvNC10YAg0L3QtdC+0LHRhdC+0LTQuNC8LCDQtdGB0LvQuCDQktGLINGF0L7RgtC40YLQtSDQtNC10LvQuNGC0YzRgdGPINGB0LLQvtC10Lkg0YHRgtCw0YLQuNGB0YLQuNC60L7QuSDRgSDQtNGA0YPQs9C40LzQuCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y/QvNC4LCDQvdCw0L/RgNC40LzQtdGALCDRgSDRgNC+0LTQuNGC0LXQu9GP0LzQuCDQuNC70Lgg0LTRgNGD0LfRjNGP0LzQuC4g0JLQvdC40LzQsNC90LjQtTog0L/RgNC10LTQvtGB0YLQsNCy0LvRj9C50YLQtSDRjdGC0L7RgiDQvdC+0LzQtdGAINGC0L7Qu9GM0LrQviDRgtC10LwsINC60L7QvNGDINCS0Ysg0LTQvtCy0LXRgNGP0LXRgtC1IgogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICAgIF9jKCJyb3V0ZXItbGluayIsIHsgYXR0cnM6IHsgdG86ICIvZnJpZW5kLXN0YXRpc3RpY3MiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigi0J/QvtGB0LzQvtGC0YDQtdGC0Ywg0YHRgtCw0YLQuNGB0YLQuNC60YMg0LfQvdCw0LrQvtC80YvRhSIpCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdLAogICAgICAgICAgMQogICAgICAgICksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJudW1iZXIiIH0pLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLTEyIGNvbC1tZC00IiB9LCBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biBidG4taW5mbyBidG4tbGciLAogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uYWRkTnVtYmVyKCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoItCh0L7Qt9C00LDRgtGMINGD0L3QuNC60LDQu9GM0L3Ri9C5INC90L7QvNC10YAiKV0KICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKQogICAgXSksCiAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZvb3RlciIgfSwgW19jKCJGb290ZXIiKV0sIDEpCiAgXSkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmb3JtLWdyb3VwIHJvdyIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC0xMiBjb2wtbWQtNiIgfSwgWwogICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jb250cm9sIG5hbWUiLAogICAgICAgICAgYXR0cnM6IHsgbmFtZTogIm5hbWUiLCBwbGFjZWhvbGRlcjogItCY0LzRjyIgfQogICAgICAgIH0pCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC0xMiBjb2wtbWQtNiIgfSwgWwogICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jb250cm9sIHN1cm5hbWUiLAogICAgICAgICAgYXR0cnM6IHsgbmFtZTogInN1cm5hbWUiLCBwbGFjZWhvbGRlcjogItCk0LDQvNC40LvQuNGPIiB9CiAgICAgICAgfSkKICAgICAgXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZm9ybS1ncm91cCByb3ciIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtMTIiIH0sIFsKICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY29udHJvbCBlbWFpbCIsCiAgICAgICAgICBhdHRyczogeyBuYW1lOiAiZW1haWwiLCBwbGFjZWhvbGRlcjogImV4YW1wbGVAZ21haWwuY29tIiB9CiAgICAgICAgfSkKICAgICAgXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZm9ybS1ncm91cCByb3ciIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtMTIiIH0sIFsKICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY29udHJvbCBhZ2UiLAogICAgICAgICAgYXR0cnM6IHsgdHlwZTogImRhdGUiLCBuYW1lOiAiYWdlIiwgbWluOiAiMTkwMC0wMS0wMSIgfQogICAgICAgIH0pCiAgICAgIF0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZvcm0tZ3JvdXAgcm93IiB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLTEyIiB9LCBbCiAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJmb3JtLWNvbnRyb2wgcGFzcyIsCiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICB0eXBlOiAicGFzc3dvcmQiLAogICAgICAgICAgICBuYW1lOiAicGFzc3dvcmQiLAogICAgICAgICAgICBwbGFjZWhvbGRlcjogItCd0L7QstGL0Lkg0L/QsNGA0L7Qu9GMIgogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIF0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZvcm0tZ3JvdXAgcm93IiB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLTEyIiB9LCBbCiAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJmb3JtLWNvbnRyb2wgcmV0dXJucGFzcyIsCiAgICAgICAgICBhdHRyczogeyBuYW1lOiAicGFzc3dvcmQyIiwgcGxhY2Vob2xkZXI6ICLQn9C+0LLRgtC+0YDQuNGC0LUg0L/QsNGA0L7Qu9GMIiB9CiAgICAgICAgfSkKICAgICAgXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZm9ybS1ncm91cCByb3ciIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtMTIgY29sLW1kLTciIH0sIFsKICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY29udHJvbCBjaXR5IiwKICAgICAgICAgIGF0dHJzOiB7IG5hbWU6ICJjaXR5IiwgcGxhY2Vob2xkZXI6ICLQk9C+0YDQvtC0IiB9CiAgICAgICAgfSkKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLTEyIGNvbC1tZC01IiB9LCBbCiAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJmb3JtLWNvbnRyb2wgc2Nob29sIiwKICAgICAgICAgIGF0dHJzOiB7IG5hbWU6ICJzY2hvb2wiLCBwbGFjZWhvbGRlcjogItCd0L7QvNC10YAg0YPRh9C10LHQvdC+0LPQviDQt9Cw0LLQtdC00LXQvdC40Y8iIH0KICAgICAgICB9KQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmb3JtLWdyb3VwIHJvdyIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC0xMiBjb2wtbWQtNiIgfSwgWwogICAgICAgIF9jKAogICAgICAgICAgInNlbGVjdCIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY3VzdG9tLXNlbGVjdCBjdXN0b20tc2VsZWN0LWxnIG1iLTMgc2Nob29sVHlwZSIsCiAgICAgICAgICAgIGF0dHJzOiB7IG5hbWU6ICJzY2hvb2xUeXBlIiB9CiAgICAgICAgICB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygib3B0aW9uIiwgeyBhdHRyczogeyBzZWxlY3RlZDogIiIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCLQotC40L8g0YPRh9C10LHQvdC+0LPQviDQt9Cw0LLQtdC00LXQvdC40Y8iKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoIm9wdGlvbiIsIHsgYXR0cnM6IHsgdmFsdWU6ICLRiNC60L7Qu9CwIiB9IH0sIFtfdm0uX3YoItCo0LrQvtC70LAiKV0pLAogICAgICAgICAgICBfYygib3B0aW9uIiwgeyBhdHRyczogeyB2YWx1ZTogItC60L7Qu9C70LXQtNC2IiB9IH0sIFtfdm0uX3YoItCa0L7Qu9C70LXQtNC2IildKSwKICAgICAgICAgICAgX2MoIm9wdGlvbiIsIHsgYXR0cnM6IHsgdmFsdWU6ICLRg9C90LjQstC10YDRgdC40YLQtdGCIiB9IH0sIFtfdm0uX3YoItCS0KPQlyIpXSkKICAgICAgICAgIF0KICAgICAgICApCiAgICAgIF0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZvcm0tZ3JvdXAgcm93IiB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLTEyIGNvbC1tZC02IiB9LCBbCiAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJmb3JtLWNvbnRyb2wgY2xhc3NfbnVtYmVyIiwKICAgICAgICAgIGF0dHJzOiB7IG5hbWU6ICJjbGFzc19udW1iZXIiLCBwbGFjZWhvbGRlcjogItCd0L7QvNC10YAg0LrQu9Cw0YHRgdCwIiB9CiAgICAgICAgfSkKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLTEyIGNvbC1tZC02IiB9LCBbCiAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJmb3JtLWNvbnRyb2wgc2ltdm9sIiwKICAgICAgICAgIGF0dHJzOiB7IG5hbWU6ICJzaW12b2wiLCBwbGFjZWhvbGRlcjogItCh0LjQvNCy0L7QuyDQutC70LDRgdGB0LAiIH0KICAgICAgICB9KQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoCiAgICAgICJkaXYiLAogICAgICB7IHN0YXRpY0NsYXNzOiAicm93Iiwgc3RhdGljU3R5bGU6IHsgInRleHQtYWxpZ24iOiAibGVmdCIgfSB9LAogICAgICBbCiAgICAgICAgX2MoImg1IiwgeyBzdGF0aWNDbGFzczogImNvbC0xMiIgfSwgWwogICAgICAgICAgX3ZtLl92KCLQo9C90LjQutCw0LvRjNC90YvQuSDQvdC+0LzQtdGAOiAiKSwKICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogInN0YXROdW1iZXIiIH0pCiAgICAgICAgXSkKICAgICAgXQogICAgKQogIH0KXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}